{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { loggedInUser } from '../helpers/utils';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; //let baseurl = environment.baseUrl;\n\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http;\n      this.user = null;\n      this.baseurl = environment.baseUrl;\n    }\n    /**\r\n     * Returns the current user\r\n     */\n\n\n    currentUser() {\n      if (!this.user) {\n        this.user = loggedInUser();\n      }\n\n      return this.user;\n    }\n    /**\r\n     * Performs the login auth\r\n     * @param email email of user\r\n     * @param password password of user\r\n     */\n\n\n    login(email, password) {\n      //return user;\n      return this.http.post(this.baseurl + `/Home/Login`, {\n        email,\n        password\n      }).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    GetAll() {\n      //return user;\n      return this.http.post(this.baseurl + `/Home/Login2`, {}).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n    /**\r\n     * Performs the signup auth\r\n     * @param name name of user\r\n     * @param email email of user\r\n     * @param password password of user\r\n     */\n\n\n    signup(name, email, password) {\n      return this.http.post(`/api/signup`, {\n        name,\n        email,\n        password\n      }).pipe(map(user => user));\n    }\n    /**\r\n     * Logout the user\r\n     */\n\n\n    logout() {\n      // remove user from session storage to log user out\n      sessionStorage.removeItem('currentUser');\n      this.user = null;\n    } //############# Other Services ########\n\n\n    category_Dropdown() {\n      //return user;\n      return this.http.post(this.baseurl + `/home/get-categories`, {}).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindReport_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/report-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindRegion_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/region-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindCity_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/country-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindSegment_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/segment-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindIndicationL1_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/indication-l1-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindIndicationL2_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/indication-l2-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindIndicationL3_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/indication-l3-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindIndicationL4_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/indication-l4-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    bindIndicationL5_Dropdown(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri); //return user;\n\n      return this.http.post(this.baseurl + `/home/indication-l5-dropdown`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n    get_report_list(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      //return user;\n      const formData = new FormData();\n      formData.append(\"cate\", cate);\n      formData.append(\"reportName\", reportStri);\n      formData.append(\"region\", regionStri);\n      formData.append(\"country\", countryStri);\n      formData.append(\"segment\", segmentStri);\n      formData.append(\"indicationL1\", indicationL1Stri);\n      formData.append(\"indicationL2\", indicationL2Stri);\n      formData.append(\"indicationL3\", indicationL3Stri);\n      formData.append(\"indicationL4\", indicationL4Stri);\n      formData.append(\"indicationL5\", indicationL5Stri);\n      return this.http.post(this.baseurl + `/home/get-report-filter-data?page=1&rows=20`, formData).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user.rows;\n      }));\n    }\n\n    get_report_listOld(cate, reportStri, regionStri, countryStri, segmentStri, indicationL1Stri, indicationL2Stri, indicationL3Stri, indicationL4Stri, indicationL5Stri) {\n      //return user;\n      return this.http.get(`http://databridgereport.com/Admin/ReportsFilters/GetReport?page=1&rows=1000&SheetTypeID=1&ReportID=2&RegionID=2`, {}).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user.ulogin && user.ulogin['token']) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}